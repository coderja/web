复习
SERVER=>DATABASE=>ROW=>COLUMN

MYSQL常用指令--MYSQL专用:
QUIT;
SHOW DATABASES;
USE 库名;
SHOW TABLES;
DESC 表名;
SHOW CREATE TABLE 表名;显示创建表所用的SQL语句

MYSQL常用的SQL指令--所有的关系型数据库通用：
DROP DATABASE IF EXISTS 库名;
CREATE DATABASE 库名 CHARSET=UTF8;
USE 库名;
CREATE TABLE 表名(列名 INT,列名 VARCHAR(2));
INSERT INTO 表名 VALUES();
DELETE FROM 表名 WHERE 列名='列值';
UPDATE 表名 SET id='',列名='列值' WHERE 列名='列值';
SELECT * FROM 表名;


今日目标
(1)列类型
(2)列约束

1.MYSQL使用mysql.exe连接服务器乱码问题;
  乱码:存数据和取数据所用的编码字符集不一样！
(1)脚本文件必须保存为UTF-8编码
(2)mysql.exe和mysqld.exe连接时必须使用UTF8编码
(3)创建的数据库保存数据库时编码也要为UTF8编码

2.MySQL中的列类型——参见手册11章
  CREATE TABLE 表名(列名 列类型);
  提示：mysql中提供的列类型非常丰富，甚至比PHP、JS等编程语言还要丰富
(1)数值类型
  TINYINT，微小整数，占用1字节(Byte)，8bit,范围-128~127，如员工年龄
  SMALLINT ，小整数，占用2字节，范围-32768~32767
  INT，整数，占用4字节，-2147483648~2147483647
  BIGINT，大整数，占用8字节，范围很大
  -------------------------------
  FLOAT(M,D),单精度浮点型,占用4字节，范围大约在3.4*10^38
  DOUBLE(M,D),双精度浮点小数,占用8字节，范围1.8*10^308
  DECIMAL(M,D),定点小数,取决操作系统,不会进行小数点移动，可以保证运算精度
  ------------
  BOOL,布尔类型,只能取值为TRUE/1或者FALSE/0,表示真或者假,
  INT/VARCHAR(1)更省空间

(2)日期时间类型--日期必须用引号括起来
   DATE,日期类型,如生日,值形如'2010-01-30'
   TIME,时间类型,如上课时间,值形如'08:30:00'
   DATETIME,日期时间类型，如注册时间,值形如'2017-8-18 22:05:20'

(3)字符串类型--日期必须用引号括起来
   CHAR(M),定长字符串，M最大为255
   VARCHAR(M),变长字符串,Variable Character,
   M指定可以存储最大的字符个数，M最大为2^16(65535)
   TEXT(M)，变长字符串M最大为2^32(即4G)
   
   ***VARCHAR比CHAR更省空间!
      CHAR的操作速度要快于VARCHAR!
      一般对于长度固定的数据用CHAR,如手机号、身份证号码;长度变化大的数据用VARCHAR
      如个人简历、家庭住址

3.MySQL中的列约束
  真实场景中，对表中的列除了类型的限制，对值得范围往往也有限制，如成绩不能为负数、
  小数位如果存在只能为0.5、性别只能为男或者女、编号不能重复、密码长度不能少于6位，邮箱必须符合特定的格式...
  这种需求称为“列约束(Constraint)”
  SQL语句中可以出现六种列约束：
  (1)主键约束
     语法:列名 列类型 PRIMARY KEY
     声明为主键的列不能出现重复的值，不能出现NULL;
     表中的数据会根据主键列上的值自动排序，提高查找效率。
     推荐一个表中都声明主键列，且只能声明一个。
  (2)唯一约束
     语法：列名 列类型 UNIQUE
     声明为“唯一”的列上不能出现重复的值
     但可以出现NULL值，是任意多个！
  (3)非空约束
     语法：列名 列类型 NOT NULL
     声明为“非空”的列上不能出现NULL值，但可以出现重复的值。
  (4)检查约束
     语法：列名 列类型 CHECK(列>值);
     声明了“检查约束”的列插入数据时对插入的值进行检查，
     若不满足指定的条件就无法插入
     ***当前版本mysql不支持检查约束
  (5)默认值约束
     语法：列名 列类型 DEFAULT 值;
     为当前列指定一个默认的值，若执行INSERT时未提供值，
     就可以使用该默认。使用默认值有两种方法：
     (1)INSERT INTO user VALUES(值1,值2,...DEFAULT,值n)
     (2)INSERT INTO user(列1,列2) VALUES(值1,值2);其他列都会使用默认值
  (6)外键约束
     语法 : deptId INT;
          FOREIGN KEY(deptId) REFERENCES dept(did)
      一个列如果声明了“外键约束(如员工表中的depId)”，此列上可以出现重复的值，
      也可以出现NULL空值，但是若出现了其他值，该值必须在部门表的did列上出现过
      即"emp.deptId上的值必须参考dept.did"
      












